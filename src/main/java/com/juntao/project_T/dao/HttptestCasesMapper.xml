<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.juntao.project_T.dao.HttptestCasesMapper" >
  <resultMap id="BaseResultMap" type="com.juntao.project_T.entity.HttptestCases" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATED" property="created" jdbcType="TIMESTAMP" />
    <result column="TEAM_ID" property="teamId" jdbcType="BIGINT" />
    <result column="TEAM_NAME" property="teamName" jdbcType="VARCHAR" />
    <result column="INV_TYPE" property="invType" jdbcType="CHAR" />
    <result column="INV_FIELD" property="invField" jdbcType="VARCHAR" />
    <result column="PROJECT_ID" property="projectId" jdbcType="BIGINT" />
    <result column="PROJECT_NAME" property="projectName" jdbcType="VARCHAR" />
    <result column="PROJECT_VERSION" property="projectVersion" jdbcType="VARCHAR" />
    <result column="API_NAME" property="apiName" jdbcType="VARCHAR" />
    <result column="API_CATALOG" property="apiCatalog" jdbcType="VARCHAR" />
    <result column="HTTP_METHOD" property="httpMethod" jdbcType="CHAR" />
    <result column="CONTENT_TYPE" property="contentType" jdbcType="CHAR" />
    <result column="MASTER_COOKIE" property="masterCookie" jdbcType="VARCHAR" />
    <result column="PRE_UPDATE_SQL_FLAG" property="preUpdateSqlFlag" jdbcType="CHAR" />
    <result column="PRE_UPDATE_SQL" property="preUpdateSql" jdbcType="VARCHAR" />
    <result column="TEST_PURPOSE" property="testPurpose" jdbcType="VARCHAR" />
    <result column="TEST_CASE_DESCRIPTION" property="testCaseDescription" jdbcType="VARCHAR" />
    <result column="TEST_CASE_KEY_SET" property="testCaseKeySet" jdbcType="VARCHAR" />
    <result column="TEST_CASE_VALUE_SET" property="testCaseValueSet" jdbcType="VARCHAR" />
    <result column="UPLOAD_FILE_PATH" property="uploadFilePath" jdbcType="VARCHAR" />
    <result column="DOWNLOAD_FILE_PATH" property="downloadFilePath" jdbcType="VARCHAR" />
    <result column="ASSERT_TYPE_SET" property="assertTypeSet" jdbcType="VARCHAR" />
    <result column="ASSERT_JSON" property="assertJson" jdbcType="OTHER" />
    <result column="ASSERT_HTML_TEXT" property="assertHtmlText" jdbcType="OTHER" />
    <result column="ASSERT_SQL" property="assertSql" jdbcType="VARCHAR" />
    <result column="ASSERT_SQL_KEY_SET" property="assertSqlKeySet" jdbcType="VARCHAR" />
    <result column="ASSERT_SQL_VALUE_SET" property="assertSqlValueSet" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CREATOR, CREATED, TEAM_ID, TEAM_NAME, INV_TYPE, INV_FIELD, PROJECT_ID, PROJECT_NAME, 
    PROJECT_VERSION, API_NAME, API_CATALOG, HTTP_METHOD, CONTENT_TYPE, MASTER_COOKIE, 
    PRE_UPDATE_SQL_FLAG, PRE_UPDATE_SQL, TEST_PURPOSE, TEST_CASE_DESCRIPTION, TEST_CASE_KEY_SET, 
    TEST_CASE_VALUE_SET, UPLOAD_FILE_PATH, DOWNLOAD_FILE_PATH, ASSERT_TYPE_SET, ASSERT_JSON, 
    ASSERT_HTML_TEXT, ASSERT_SQL, ASSERT_SQL_KEY_SET, ASSERT_SQL_VALUE_SET
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.juntao.project_T.entity.HttptestCasesExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from httptestcases
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from httptestcases
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from httptestcases
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.juntao.project_T.entity.HttptestCasesExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from httptestcases
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.juntao.project_T.entity.HttptestCases" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into httptestcases (ID, CREATOR, CREATED, 
      TEAM_ID, TEAM_NAME, INV_TYPE, 
      INV_FIELD, PROJECT_ID, PROJECT_NAME, 
      PROJECT_VERSION, API_NAME, API_CATALOG, 
      HTTP_METHOD, CONTENT_TYPE, MASTER_COOKIE, 
      PRE_UPDATE_SQL_FLAG, PRE_UPDATE_SQL, TEST_PURPOSE, 
      TEST_CASE_DESCRIPTION, TEST_CASE_KEY_SET, TEST_CASE_VALUE_SET, 
      UPLOAD_FILE_PATH, DOWNLOAD_FILE_PATH, ASSERT_TYPE_SET, 
      ASSERT_JSON, ASSERT_HTML_TEXT, ASSERT_SQL, 
      ASSERT_SQL_KEY_SET, ASSERT_SQL_VALUE_SET)
    values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{teamId,jdbcType=BIGINT}, #{teamName,jdbcType=VARCHAR}, #{invType,jdbcType=CHAR}, 
      #{invField,jdbcType=VARCHAR}, #{projectId,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR}, 
      #{projectVersion,jdbcType=VARCHAR}, #{apiName,jdbcType=VARCHAR}, #{apiCatalog,jdbcType=VARCHAR}, 
      #{httpMethod,jdbcType=CHAR}, #{contentType,jdbcType=CHAR}, #{masterCookie,jdbcType=VARCHAR}, 
      #{preUpdateSqlFlag,jdbcType=CHAR}, #{preUpdateSql,jdbcType=VARCHAR}, #{testPurpose,jdbcType=VARCHAR}, 
      #{testCaseDescription,jdbcType=VARCHAR}, #{testCaseKeySet,jdbcType=VARCHAR}, #{testCaseValueSet,jdbcType=VARCHAR}, 
      #{uploadFilePath,jdbcType=VARCHAR}, #{downloadFilePath,jdbcType=VARCHAR}, #{assertTypeSet,jdbcType=VARCHAR}, 
      #{assertJson,jdbcType=OTHER}, #{assertHtmlText,jdbcType=OTHER}, #{assertSql,jdbcType=VARCHAR}, 
      #{assertSqlKeySet,jdbcType=VARCHAR}, #{assertSqlValueSet,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.juntao.project_T.entity.HttptestCases" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into httptestcases
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="created != null" >
        CREATED,
      </if>
      <if test="teamId != null" >
        TEAM_ID,
      </if>
      <if test="teamName != null" >
        TEAM_NAME,
      </if>
      <if test="invType != null" >
        INV_TYPE,
      </if>
      <if test="invField != null" >
        INV_FIELD,
      </if>
      <if test="projectId != null" >
        PROJECT_ID,
      </if>
      <if test="projectName != null" >
        PROJECT_NAME,
      </if>
      <if test="projectVersion != null" >
        PROJECT_VERSION,
      </if>
      <if test="apiName != null" >
        API_NAME,
      </if>
      <if test="apiCatalog != null" >
        API_CATALOG,
      </if>
      <if test="httpMethod != null" >
        HTTP_METHOD,
      </if>
      <if test="contentType != null" >
        CONTENT_TYPE,
      </if>
      <if test="masterCookie != null" >
        MASTER_COOKIE,
      </if>
      <if test="preUpdateSqlFlag != null" >
        PRE_UPDATE_SQL_FLAG,
      </if>
      <if test="preUpdateSql != null" >
        PRE_UPDATE_SQL,
      </if>
      <if test="testPurpose != null" >
        TEST_PURPOSE,
      </if>
      <if test="testCaseDescription != null" >
        TEST_CASE_DESCRIPTION,
      </if>
      <if test="testCaseKeySet != null" >
        TEST_CASE_KEY_SET,
      </if>
      <if test="testCaseValueSet != null" >
        TEST_CASE_VALUE_SET,
      </if>
      <if test="uploadFilePath != null" >
        UPLOAD_FILE_PATH,
      </if>
      <if test="downloadFilePath != null" >
        DOWNLOAD_FILE_PATH,
      </if>
      <if test="assertTypeSet != null" >
        ASSERT_TYPE_SET,
      </if>
      <if test="assertJson != null" >
        ASSERT_JSON,
      </if>
      <if test="assertHtmlText != null" >
        ASSERT_HTML_TEXT,
      </if>
      <if test="assertSql != null" >
        ASSERT_SQL,
      </if>
      <if test="assertSqlKeySet != null" >
        ASSERT_SQL_KEY_SET,
      </if>
      <if test="assertSqlValueSet != null" >
        ASSERT_SQL_VALUE_SET,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="teamId != null" >
        #{teamId,jdbcType=BIGINT},
      </if>
      <if test="teamName != null" >
        #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="invType != null" >
        #{invType,jdbcType=CHAR},
      </if>
      <if test="invField != null" >
        #{invField,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectVersion != null" >
        #{projectVersion,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null" >
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiCatalog != null" >
        #{apiCatalog,jdbcType=VARCHAR},
      </if>
      <if test="httpMethod != null" >
        #{httpMethod,jdbcType=CHAR},
      </if>
      <if test="contentType != null" >
        #{contentType,jdbcType=CHAR},
      </if>
      <if test="masterCookie != null" >
        #{masterCookie,jdbcType=VARCHAR},
      </if>
      <if test="preUpdateSqlFlag != null" >
        #{preUpdateSqlFlag,jdbcType=CHAR},
      </if>
      <if test="preUpdateSql != null" >
        #{preUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="testPurpose != null" >
        #{testPurpose,jdbcType=VARCHAR},
      </if>
      <if test="testCaseDescription != null" >
        #{testCaseDescription,jdbcType=VARCHAR},
      </if>
      <if test="testCaseKeySet != null" >
        #{testCaseKeySet,jdbcType=VARCHAR},
      </if>
      <if test="testCaseValueSet != null" >
        #{testCaseValueSet,jdbcType=VARCHAR},
      </if>
      <if test="uploadFilePath != null" >
        #{uploadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="downloadFilePath != null" >
        #{downloadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="assertTypeSet != null" >
        #{assertTypeSet,jdbcType=VARCHAR},
      </if>
      <if test="assertJson != null" >
        #{assertJson,jdbcType=OTHER},
      </if>
      <if test="assertHtmlText != null" >
        #{assertHtmlText,jdbcType=OTHER},
      </if>
      <if test="assertSql != null" >
        #{assertSql,jdbcType=VARCHAR},
      </if>
      <if test="assertSqlKeySet != null" >
        #{assertSqlKeySet,jdbcType=VARCHAR},
      </if>
      <if test="assertSqlValueSet != null" >
        #{assertSqlValueSet,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juntao.project_T.entity.HttptestCasesExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from httptestcases
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update httptestcases
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null" >
        CREATOR = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        CREATED = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teamId != null" >
        TEAM_ID = #{record.teamId,jdbcType=BIGINT},
      </if>
      <if test="record.teamName != null" >
        TEAM_NAME = #{record.teamName,jdbcType=VARCHAR},
      </if>
      <if test="record.invType != null" >
        INV_TYPE = #{record.invType,jdbcType=CHAR},
      </if>
      <if test="record.invField != null" >
        INV_FIELD = #{record.invField,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        PROJECT_ID = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.projectName != null" >
        PROJECT_NAME = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectVersion != null" >
        PROJECT_VERSION = #{record.projectVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.apiName != null" >
        API_NAME = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiCatalog != null" >
        API_CATALOG = #{record.apiCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.httpMethod != null" >
        HTTP_METHOD = #{record.httpMethod,jdbcType=CHAR},
      </if>
      <if test="record.contentType != null" >
        CONTENT_TYPE = #{record.contentType,jdbcType=CHAR},
      </if>
      <if test="record.masterCookie != null" >
        MASTER_COOKIE = #{record.masterCookie,jdbcType=VARCHAR},
      </if>
      <if test="record.preUpdateSqlFlag != null" >
        PRE_UPDATE_SQL_FLAG = #{record.preUpdateSqlFlag,jdbcType=CHAR},
      </if>
      <if test="record.preUpdateSql != null" >
        PRE_UPDATE_SQL = #{record.preUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="record.testPurpose != null" >
        TEST_PURPOSE = #{record.testPurpose,jdbcType=VARCHAR},
      </if>
      <if test="record.testCaseDescription != null" >
        TEST_CASE_DESCRIPTION = #{record.testCaseDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.testCaseKeySet != null" >
        TEST_CASE_KEY_SET = #{record.testCaseKeySet,jdbcType=VARCHAR},
      </if>
      <if test="record.testCaseValueSet != null" >
        TEST_CASE_VALUE_SET = #{record.testCaseValueSet,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadFilePath != null" >
        UPLOAD_FILE_PATH = #{record.uploadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.downloadFilePath != null" >
        DOWNLOAD_FILE_PATH = #{record.downloadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.assertTypeSet != null" >
        ASSERT_TYPE_SET = #{record.assertTypeSet,jdbcType=VARCHAR},
      </if>
      <if test="record.assertJson != null" >
        ASSERT_JSON = #{record.assertJson,jdbcType=OTHER},
      </if>
      <if test="record.assertHtmlText != null" >
        ASSERT_HTML_TEXT = #{record.assertHtmlText,jdbcType=OTHER},
      </if>
      <if test="record.assertSql != null" >
        ASSERT_SQL = #{record.assertSql,jdbcType=VARCHAR},
      </if>
      <if test="record.assertSqlKeySet != null" >
        ASSERT_SQL_KEY_SET = #{record.assertSqlKeySet,jdbcType=VARCHAR},
      </if>
      <if test="record.assertSqlValueSet != null" >
        ASSERT_SQL_VALUE_SET = #{record.assertSqlValueSet,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update httptestcases
    set ID = #{record.id,jdbcType=BIGINT},
      CREATOR = #{record.creator,jdbcType=VARCHAR},
      CREATED = #{record.created,jdbcType=TIMESTAMP},
      TEAM_ID = #{record.teamId,jdbcType=BIGINT},
      TEAM_NAME = #{record.teamName,jdbcType=VARCHAR},
      INV_TYPE = #{record.invType,jdbcType=CHAR},
      INV_FIELD = #{record.invField,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=BIGINT},
      PROJECT_NAME = #{record.projectName,jdbcType=VARCHAR},
      PROJECT_VERSION = #{record.projectVersion,jdbcType=VARCHAR},
      API_NAME = #{record.apiName,jdbcType=VARCHAR},
      API_CATALOG = #{record.apiCatalog,jdbcType=VARCHAR},
      HTTP_METHOD = #{record.httpMethod,jdbcType=CHAR},
      CONTENT_TYPE = #{record.contentType,jdbcType=CHAR},
      MASTER_COOKIE = #{record.masterCookie,jdbcType=VARCHAR},
      PRE_UPDATE_SQL_FLAG = #{record.preUpdateSqlFlag,jdbcType=CHAR},
      PRE_UPDATE_SQL = #{record.preUpdateSql,jdbcType=VARCHAR},
      TEST_PURPOSE = #{record.testPurpose,jdbcType=VARCHAR},
      TEST_CASE_DESCRIPTION = #{record.testCaseDescription,jdbcType=VARCHAR},
      TEST_CASE_KEY_SET = #{record.testCaseKeySet,jdbcType=VARCHAR},
      TEST_CASE_VALUE_SET = #{record.testCaseValueSet,jdbcType=VARCHAR},
      UPLOAD_FILE_PATH = #{record.uploadFilePath,jdbcType=VARCHAR},
      DOWNLOAD_FILE_PATH = #{record.downloadFilePath,jdbcType=VARCHAR},
      ASSERT_TYPE_SET = #{record.assertTypeSet,jdbcType=VARCHAR},
      ASSERT_JSON = #{record.assertJson,jdbcType=OTHER},
      ASSERT_HTML_TEXT = #{record.assertHtmlText,jdbcType=OTHER},
      ASSERT_SQL = #{record.assertSql,jdbcType=VARCHAR},
      ASSERT_SQL_KEY_SET = #{record.assertSqlKeySet,jdbcType=VARCHAR},
      ASSERT_SQL_VALUE_SET = #{record.assertSqlValueSet,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juntao.project_T.entity.HttptestCases" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update httptestcases
    <set >
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        CREATED = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="teamId != null" >
        TEAM_ID = #{teamId,jdbcType=BIGINT},
      </if>
      <if test="teamName != null" >
        TEAM_NAME = #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="invType != null" >
        INV_TYPE = #{invType,jdbcType=CHAR},
      </if>
      <if test="invField != null" >
        INV_FIELD = #{invField,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        PROJECT_ID = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null" >
        PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectVersion != null" >
        PROJECT_VERSION = #{projectVersion,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null" >
        API_NAME = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiCatalog != null" >
        API_CATALOG = #{apiCatalog,jdbcType=VARCHAR},
      </if>
      <if test="httpMethod != null" >
        HTTP_METHOD = #{httpMethod,jdbcType=CHAR},
      </if>
      <if test="contentType != null" >
        CONTENT_TYPE = #{contentType,jdbcType=CHAR},
      </if>
      <if test="masterCookie != null" >
        MASTER_COOKIE = #{masterCookie,jdbcType=VARCHAR},
      </if>
      <if test="preUpdateSqlFlag != null" >
        PRE_UPDATE_SQL_FLAG = #{preUpdateSqlFlag,jdbcType=CHAR},
      </if>
      <if test="preUpdateSql != null" >
        PRE_UPDATE_SQL = #{preUpdateSql,jdbcType=VARCHAR},
      </if>
      <if test="testPurpose != null" >
        TEST_PURPOSE = #{testPurpose,jdbcType=VARCHAR},
      </if>
      <if test="testCaseDescription != null" >
        TEST_CASE_DESCRIPTION = #{testCaseDescription,jdbcType=VARCHAR},
      </if>
      <if test="testCaseKeySet != null" >
        TEST_CASE_KEY_SET = #{testCaseKeySet,jdbcType=VARCHAR},
      </if>
      <if test="testCaseValueSet != null" >
        TEST_CASE_VALUE_SET = #{testCaseValueSet,jdbcType=VARCHAR},
      </if>
      <if test="uploadFilePath != null" >
        UPLOAD_FILE_PATH = #{uploadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="downloadFilePath != null" >
        DOWNLOAD_FILE_PATH = #{downloadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="assertTypeSet != null" >
        ASSERT_TYPE_SET = #{assertTypeSet,jdbcType=VARCHAR},
      </if>
      <if test="assertJson != null" >
        ASSERT_JSON = #{assertJson,jdbcType=OTHER},
      </if>
      <if test="assertHtmlText != null" >
        ASSERT_HTML_TEXT = #{assertHtmlText,jdbcType=OTHER},
      </if>
      <if test="assertSql != null" >
        ASSERT_SQL = #{assertSql,jdbcType=VARCHAR},
      </if>
      <if test="assertSqlKeySet != null" >
        ASSERT_SQL_KEY_SET = #{assertSqlKeySet,jdbcType=VARCHAR},
      </if>
      <if test="assertSqlValueSet != null" >
        ASSERT_SQL_VALUE_SET = #{assertSqlValueSet,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juntao.project_T.entity.HttptestCases" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update httptestcases
    set CREATOR = #{creator,jdbcType=VARCHAR},
      CREATED = #{created,jdbcType=TIMESTAMP},
      TEAM_ID = #{teamId,jdbcType=BIGINT},
      TEAM_NAME = #{teamName,jdbcType=VARCHAR},
      INV_TYPE = #{invType,jdbcType=CHAR},
      INV_FIELD = #{invField,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=BIGINT},
      PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
      PROJECT_VERSION = #{projectVersion,jdbcType=VARCHAR},
      API_NAME = #{apiName,jdbcType=VARCHAR},
      API_CATALOG = #{apiCatalog,jdbcType=VARCHAR},
      HTTP_METHOD = #{httpMethod,jdbcType=CHAR},
      CONTENT_TYPE = #{contentType,jdbcType=CHAR},
      MASTER_COOKIE = #{masterCookie,jdbcType=VARCHAR},
      PRE_UPDATE_SQL_FLAG = #{preUpdateSqlFlag,jdbcType=CHAR},
      PRE_UPDATE_SQL = #{preUpdateSql,jdbcType=VARCHAR},
      TEST_PURPOSE = #{testPurpose,jdbcType=VARCHAR},
      TEST_CASE_DESCRIPTION = #{testCaseDescription,jdbcType=VARCHAR},
      TEST_CASE_KEY_SET = #{testCaseKeySet,jdbcType=VARCHAR},
      TEST_CASE_VALUE_SET = #{testCaseValueSet,jdbcType=VARCHAR},
      UPLOAD_FILE_PATH = #{uploadFilePath,jdbcType=VARCHAR},
      DOWNLOAD_FILE_PATH = #{downloadFilePath,jdbcType=VARCHAR},
      ASSERT_TYPE_SET = #{assertTypeSet,jdbcType=VARCHAR},
      ASSERT_JSON = #{assertJson,jdbcType=OTHER},
      ASSERT_HTML_TEXT = #{assertHtmlText,jdbcType=OTHER},
      ASSERT_SQL = #{assertSql,jdbcType=VARCHAR},
      ASSERT_SQL_KEY_SET = #{assertSqlKeySet,jdbcType=VARCHAR},
      ASSERT_SQL_VALUE_SET = #{assertSqlValueSet,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>